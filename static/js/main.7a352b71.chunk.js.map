{"version":3,"sources":["components/transition1/navbar/navbar.js","transitions/transition1/transition1.js","App.js","Team.js","serviceWorker.js","index.js"],"names":["Navbar","useState","navbarVisibility","setNavbarVisibility","customNavbar","backgroundColor","fontFamily","height","position","zIndex","top","left","overflowX","transition","paddingTop","width","customNavbarA","padding","textDecoration","fontSize","color","display","className","onClick","console","log","animationKey","size","style","cursor","marginLeft","marginTop","href","onHover","margin","float","paddingLeft","classname","FullPage","React","Component","SecondPage","id","Boolean","window","location","hostname","match","ReactDOM","render","basename","exact","path","component","Team","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a352b71.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport { HashLink as HLink } from 'react-router-hash-link';\r\n\r\nimport \"./navbar.css\"\r\n\r\nimport UseAnimations from \"react-useanimations\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n   const links = [\r\n      { id: 1, Name: 'Home', to: '/#home' },\r\n      { id: 2, Name: 'Team', to: '/team' },\r\n      { id: 3, Name: 'Contact', to: '/#contact' },\r\n      // { id: 4, Name: 'Log In', to: 'https://dash.alrt.ai' },\r\n   ];\r\n   \r\n   const [navbarVisibility, setNavbarVisibility] = useState(false);\r\n\r\n   function toggleVisibility(){\r\n      setNavbarVisibility(!navbarVisibility)\r\n      console.log(navbarVisibility)\r\n   }\r\n\r\n   const customNavbar = {\r\n      backgroundColor: \"#000000cc\",\r\n      fontFamily:\"'Poppins',sans-serif\",\r\n      height: \"100%\",\r\n      position: \"fixed\",\r\n      zIndex: 1,\r\n      top: 0,\r\n      left: 0,\r\n      overflowX: \"hidden\",\r\n      transition: \"0.5s\",\r\n      paddingTop: \"50vh\",\r\n      width: navbarVisibility ? \"100vw\" : \"0\",\r\n   }\r\n\r\n   const customNavbarA = {\r\n      padding: \"8px 8px 8px 32px\",\r\n      textDecoration: \"none\",\r\n      fontSize: \"25px\",\r\n      color: \"white\",\r\n      display: \"block\",\r\n      transition: \"0.3s\",\r\n   }\r\n\r\n   const customNavbarAHover = {\r\n      color: \"#f1f1f1\",\r\n   }\r\n\r\n   return (\r\n      <div className=\"navbar\">\r\n        \r\n        <div onClick={toggleVisibility}>\r\n      <UseAnimations\r\n        animationKey=\"menu2\"\r\n        size={30}\r\n        style={{ color: \"white\", cursor: \"pointer\", marginLeft: \"85vw\", marginTop: \"3vh\", position: \"relative\", zIndex: \"5\" }}\r\n      />\r\n       </div>\r\n\r\n       <div className=\"navbar\" style={customNavbar}>\r\n         <a href=\"\" style={customNavbarA} onHover={\"\"}>Home</a>\r\n         <a href=\"\" style={customNavbarA} onHover={\"\"}>About</a>\r\n         <a href=\"\" style={customNavbarA} onHover={\"\"}>Blog</a>\r\n         <a href=\"\" style={customNavbarA} onHover={\"\"}>Contact</a>\r\n         <span>\r\n         <a href=\"\" style={customNavbarA}>\r\n         <UseAnimations\r\n        animationKey=\"github\"\r\n        size={30}\r\n        style={{ color: \"white\", cursor: \"pointer\", padding:\"0\", margin:\"0\", float:\"left\" }}\r\n      />\r\n         </a>\r\n         <a href=\"\" style={customNavbarA}>\r\n            <UseAnimations\r\n        animationKey=\"instagram\"\r\n        size={30}\r\n        style={{ color: \"white\", cursor: \"pointer\", padding:\"0\", margin:\"0\", float:\"left\" , paddingLeft:\"10px\" }}\r\n      /></a>\r\n         <a href=\"\" style={customNavbarA}>\r\n         <UseAnimations\r\n        animationKey=\"linkedin\"\r\n        size={30}\r\n        style={{ color: \"white\", cursor: \"pointer\", padding:\"0\", margin:\"0\", float:\"left\" , paddingLeft:\"10px\" }}\r\n      />\r\n         </a>\r\n         <a href=\"\" style={customNavbarA}>\r\n         <UseAnimations\r\n        animationKey=\"twitter\"\r\n        size={30}\r\n        style={{ color: \"white\", cursor: \"pointer\", padding:\"0\", margin:\"0\", float:\"left\" , paddingLeft:\"10px\" }}\r\n      />\r\n         </a>\r\n         </span>\r\n       </div>\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Navbar\r\n\r\n\r\n\r\n// return (\r\n//    <div className=\"navbar\">\r\n//       <div className=\"navbar-fixed\">\r\n//          <nav className=\"nav-wrapper \" style={{ \"background-color\": \"#5B43EF\" }}>\r\n//             <div className=\"container\">\r\n//                <a href=\"#\" data-target=\"mobile-nav\" className=\"sidenav-trigger\">\r\n//                   <i className=\"material-icons\" style={{ color: \"#dfdfdf\" }}>menu</i>\r\n//                </a>\r\n//                <img src={img} alt=\"\" className=\"logo\"/>\r\n//                <ul className=\"right hide-on-med-and-down\" >\r\n//                   {links.map(link => (\r\n//                      <li key={link.id}>\r\n//                         <HLink style={{'color':'#dfdfdf'}} to={link.to} >{link.Name}</HLink>\r\n//                      </li>\r\n//                   ))}\r\n//                   <li >\r\n//                      <a style={{'color':'#dfdfdf'}} href={\"https://dash.alrt.ai\"} >{\"Login\"}</a>\r\n//                   </li>\r\n\r\n//                </ul>\r\n//             </div>\r\n//          </nav>\r\n//       </div>\r\n\r\n//       <ul className=\"sidenav\" id='mobile-nav' style={{ \"background-color\": \"#5B43EF\", 'padding-top':'20vh' }}>\r\n//          {links.map(link => (\r\n//             <li key={link.id} >\r\n//                <HLink className='white-text' style={{'margin':'5vh 0', 'text-align':'center'}}\r\n//                to={link.to} >{link.Name}</HLink>\r\n//             </li>\r\n//          ))}\r\n//       </ul>\r\n//    </div>\r\n// )\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/transition1/navbar/navbar.js\"\r\n\r\nimport \"./transition1.css\"\r\n\r\nimport UseAnimations from \"react-useanimations\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n\r\n    <div className=\"main_container\">\r\n      <h1 className=\"main_text\">\r\n        Hey there! <br/>\r\n        I'm Nikita.\r\n      </h1>\r\n\r\n      <h4 className=\"home_text_red\">\r\n        Let's start with this.\r\n      </h4>\r\n\r\n      <h2 className=\"home_text_big\">\r\n      Dogstudio is a multidisciplinary\r\n      creative studio at the intersection\r\n      of art, design and technology.\r\n      Our goal is to deliver amazing experiences that make\r\n      people talk, and build strategic value for brands, tech,\r\n      entertainment, arts & culture.\r\n      </h2>\r\n\r\n      <h3 className=\"filler_text\">\r\n        So... what?\r\n      </h3>\r\n\r\n      <h5 className=\"home_text_small\">\r\n      Dogstudio is a multidisciplinary\r\n      creative studio at the intersection\r\n      of art, design and technology.\r\n      Our goal is to deliver amazing experiences that make\r\n      people talk, and build strategic value for brands, tech,\r\n      entertainment, arts & culture.\r\n      <br/><br/>\r\n      Dogstudio is a multidisciplinary\r\n      creative studio at the intersection\r\n      of art, design and technology.\r\n      Our goal is to deliver amazing experiences that make\r\n      people talk, and build strategic value for brands, tech,\r\n      entertainment, arts & culture.\r\n      </h5>\r\n\r\n      <button className=\"home_button home_button_1\">\r\n        <h6 classname=\"home_button_text\">\r\n          Check out my projects\r\n        <UseAnimations\r\n        animationKey=\"skipForward\"\r\n        size={20}\r\n        style={{ color: \"white\", cursor: \"pointer\", float:\"right\", padding:\"0\", margin:\"0\", paddingLeft:\"60px\" }}\r\n      />\r\n        </h6>\r\n      </button>\r\n\r\n      <h4 className=\"home_text_red\">\r\n        it's time to shine.\r\n      </h4>\r\n\r\n      <h1 className=\"main_text\">\r\n        Now coming to my creative side!\r\n      </h1>\r\n\r\n      <h5 className=\"home_text_small\">\r\n      ...and on that note, here's a list of things I enjoy.\r\n      </h5>\r\n\r\n      <h3 className=\"filler_text\">\r\n        Poetry and prose. <br/>\r\n        Does it get any better than this?\r\n      </h3>\r\n\r\n      <button className=\"home_button home_button_1\">\r\n        <h6 classname=\"home_button_text\">\r\n        Read away\r\n        <UseAnimations\r\n        animationKey=\"skipForward\"\r\n        size={20}\r\n        style={{ color: \"white\", cursor: \"pointer\", float:\"right\", padding:\"0\", margin:\"0\", paddingLeft:\"60px\" }}\r\n      />\r\n        </h6>\r\n      </button>\r\n\r\n      <h5 className=\"home_text_small\">\r\n      Yes, I know there's \r\n      only one item on it so it's not exactly a list but bear with me. \r\n      I hope to add more of them someday.\r\n      </h5>\r\n\r\n    </div>\r\n\r\n{/* \r\n      <div className=\"content\">\r\n\r\n            <h1>\r\n            Focussed News From AI To You\r\n            </h1>\r\n    \r\n            <p>\r\n            Whether you’re monitoring clients or suppliers for pre-deal checks, KYC or ongoing risk management, we can provide up to the minute alerts on your clients, supply chain, even people, countries or specific events. Entities are uniquely scored on predefined or custom use cases and ranked by impact and historical weighting. Look for incidence of financial crime or non-financial risk types such as Operational Risk or Cybercrime and be alerted when you need to know.\r\n            </p>\r\n\r\n            <button className=\"button button1\">\r\n            Get Started\r\n            </button>\r\n\r\n            <button className=\"button button2\">\r\n            Learn More\r\n            </button>\r\n    \r\n    </div>\r\n\r\n    <div className=\"component first-component globe\">\r\n      <Globe/>\r\n\r\n    </div> */}\r\n    </div>\r\n  );\r\n};","import React from \"react\";\n\nimport Transition1 from \"./transitions/transition1/transition1.js\"\n\nimport './App.css';\n\nclass FullPage extends React.Component {\n  render() {\n    return (\n      <body>\n        <Transition1 />           \n       \n      </body>\n      \n    );\n  }\n}\n\nexport default FullPage;\n\n// import React from \"react\";\n// import { Pager } from \"react-bootstrap\";\n\n// import ReactPageScroller from \"react-page-scroller\";\n\n// import Transition1 from \"./transitions/transition1/transition1.js\"\n// import Transition2 from \"./transitions/transition2/transition2.js\"\n\n// import './App.css';\n\n// // import FirstComponent from \"./pages/FirstComponent\";\n// // import SecondComponent from \"./pages/SecondComponent\";\n// // import Sections from \"./pages/Sections\";\n// // import Vertical from \"./pages/VerticalTimeline.js\"\n// // import Footer from \"./Footer.js\"\n\n// class FullPage extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { currentPage: null };\n//   }\n\n\n//   handlePageChange = number => {\n//     this.setState({ currentPage: number }); // set currentPage number, to reset it from the previous selected.\n//   };\n\n//   getPagesNumbers = () => {\n//     const pageNumbers = [];\n\n//     for (let i = 1; i <= 9; i++) {\n//       pageNumbers.push(\n//         <Pager.Item key={i} eventKey={i - 1} onSelect={this.handlePageChange}>\n//           {i}\n//         </Pager.Item>,\n//       );\n//     }\n\n//     return [...pageNumbers];\n//   };\n\n \n\n//   render() {\n//     const pagesNumbers = this.getPagesNumbers();\n\n//     return (\n//       <body>\n//       <React.Fragment>\n//         <ReactPageScroller\n//           pageOnChange={this.handlePageChange}\n//           customPageNumber={this.state.currentPage}\n//         >\n        \n//         <Transition1 />           \n//         <Transition2 />\n\n//         </ReactPageScroller>\n        \n//          {/* <Pager className=\"pagination-additional-class\" bsSize=\"large\">\n//            {pagesNumbers}\n//      </Pager> */}\n//       </React.Fragment>\n//       </body>\n//     );\n//   }\n// }\n\n// export default FullPage;","import React from \"react\"\r\n\r\nimport \"./team.css\"\r\n\r\nimport Navbar from \"./components/transition1/navbar/navbar.js\"\r\n\r\n\r\nconst SecondPage = () => (\r\n  <div className=\"team_page\">\r\n\r\n      <Navbar />\r\n\r\n    <div id=\"intro\">\r\n    <p>alrt.ai started almost accidentally following a reddit post on /r/datascience. Long story short, Adarsh was looking for a data science use case for a final year project, Claus saw it, replied, and it took off from there. Adarsh pulled together the founding team and we're working on customising scenarios for news feed analytics to combine and rank stories related to different kinds of entities, then give you alerts, trends, notifications or whatever works for you. In any case, it won't be conventional.</p>\r\n    </div>\r\n\r\n    <div id=\"about\">\r\n\r\n      <div id=\"row1\">\r\n      <div id=\"contain1\">\r\n        <div className=\"person1\"></div>\r\n        <h2>Claus Murmann</h2>\r\n        <h3>CEO</h3>\r\n        <h4>Claus has had a career in IT since back in the 90s, ranging from building the first web app in a European investment bank, through supporting various  commodities trading teams building analytics and trading solutions and most recently venturing into the data science space. He was a senior sales analytics lead at the largest US investment bank and has now moved into risk analytics.</h4>\r\n      </div>\r\n\r\n      <div id=\"contain2\">\r\n      <div className=\"person2\"></div>\r\n      <h2>Adarsh S</h2>\r\n      <h3>CTO</h3>\r\n      <h4>Adarsh loves working with data and adores coding in Python which he used to succeed in various remote programs by building back-end and Data Engineering Architectures like Google Summer of Code and Google Code-In. He also worked as a Data Scientist building cool ML products in a Series A product start-up with 3 Million MAU  and wrote a popular python library. He also has a borderline crazy obsession with rock music.</h4>\r\n      </div>\r\n\r\n      <div id=\"contain3\">\r\n      <div className=\"person3\"></div>\r\n      <h2>Shahul ES</h2>\r\n      <h3>CDSO</h3>\r\n      <h4>Shahul is a Kaggle Master and is ranked in top 25 among 100K+ Kaggle users. He has 4+ years of acquaintance in the field Data Science and multi-year experience working as a Data Scientist in top start-ups. He  loves contributing and competing in Data science & ML competitions and platforms. He also loves to spend time with AI experts and enjoys public speaking.</h4>\r\n      </div>\r\n\r\n      </div>\r\n\r\n      <div id=\"row2\">\r\n\r\n      <div id=\"contain4\">\r\n      <div className=\"person4\"></div>\r\n      <h2>Tino Thayil</h2>\r\n      <h3>COO</h3>\r\n      <h4>Tino began his entrepreneurial journey in his sophomore year of college by cofounding an AR based Learning platform called Arvy. He has also worked on the product for a successful android application on Google playstore. He loves building products out of ideas and competing in Hackathons and pitching competitions. He is an avid tech enthusiast who is always looking out for new technologies and using it to innovate current products.</h4>\r\n      \r\n      </div>\r\n\r\n      <div id=\"contain6\">\r\n      <div className=\"person6\"></div>\r\n      <h2>Ameen Azeez</h2>\r\n      <h3>Head of UI/UX</h3>\r\n      <h4>Ameen is a passionate designer and developer. He started out by designing posters, and later started working on designing and developing websites and applications. He loves participating in contests and won a few hackathons and designing contests.  He also has a eye for photography.</h4>\r\n      \r\n      </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n    </div>\r\n\r\n)\r\n\r\nexport default SecondPage\r\n\r\n/*<span>\r\n<img src=\"\" alt=\"\"/>\r\n<img src=\"\" alt=\"\"/>\r\n<img src=\"\" alt=\"\"/>\r\n</span>\r\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './index.css';\nimport FullPage from './App.js';\nimport Team from './Team.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router basename=\"\">\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={FullPage} />\n          <Route path=\"/team\" component={Team} />\n        </Switch>\n      </div>\n    </Router>,\n    document.getElementById(\"root\"),\n  );\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}